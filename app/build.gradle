buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    def globalConf = rootProject.ext

    compileSdkVersion globalConf.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConf.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConf.getAt("androidMinSdkVersion")
        targetSdkVersion globalConf.getAt("androidTargetSdkVersion")

        versionCode 1007
        versionName "1.007"

        //applicationId is set in productFlavors

        testInstrumentationRunner globalConf.getAt("testInstrumentationRunner")
    }

    applicationVariants.all { variant ->
        def filename = "TestRest-" + variant.baseName + "-${variant.versionName}.apk"

        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    filename)
        }
    }

    final Console console = System.console();
    if (console != null) {

        // Building from console
        signingConfigs {
            release {
                storeFile file("/Users/antonaverin/projects/personal/!Archive/a_TestRest/Release/sign/keysore.jks")
                storePassword console.readLine("Enter keystore password: ")
                keyAlias console.readLine("Enter alias key: ")
                keyPassword console.readLine("Enter key password: ")
            }
        }

    } else {

        // Building from IDE's "Run" button
        signingConfigs {
            release {

            }
        }

    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets.release.setRoot('src/release')
    sourceSets.debug.setRoot('src/debug')

}

final RUNNER_VERSION = '0.4.1'
final ESPRESSO_VERSION = '2.2.1'
final SUPPORT_VERSION = '23.1.1'
dependencies {
    compile project(':data')

    compile "com.android.support:support-v4:${SUPPORT_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    compile "com.android.support:design:${SUPPORT_VERSION}"
    compile 'com.nineoldandroids:library:2.4.0'

    apt "com.google.dagger:dagger-compiler:2.0"
    compile "com.google.dagger:dagger:2.0"
    compile "io.reactivex:rxjava:1.0.14"
    compile "io.reactivex:rxandroid:0.25.0"

    compile "com.jakewharton:butterknife:7.0.1"
    compile 'com.facebook.stetho:stetho:1.2.0'
    compile 'com.facebook.stetho:stetho-okhttp:1.2.0'

    compile 'com.google.code.gson:gson:2.5'

    provided "org.glassfish:javax.annotation:10.0-b28"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.36-beta'
    testCompile 'org.hamcrest:hamcrest-all:1.3'

    androidTestCompile "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test:rules:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestCompile 'com.android.support:support-annotations:23.1.1'
}

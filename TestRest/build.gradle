buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'android-command'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    jcenter()
}

apply plugin: 'com.neenbedankt.android-apt'

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        versionCode 1006
        versionName "1.006"

        //applicationId is set in productFlavors

        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    }

    final Console console = System.console();
    if (console != null) {

        // Building from console
        signingConfigs {
            release {
                storeFile file("/Users/antonaverin/projects/personal/!Archive/a_TestRest/Release/sign")
                storePassword console.readLine("Enter keystore password: ")
                keyAlias console.readLine("Enter alias key: ")
                keyPassword console.readLine("Enter key password: ")
            }
        }

    } else {

        // Building from IDE's "Run" button
        signingConfigs {
            release {

            }
        }

    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets.release.setRoot('src/release')
    sourceSets.debug.setRoot('src/debug')

}


dependencies {
    compile 'com.android.support:support-v4:22.2.1'
//    compile 'com.android.support:gridlayout-v7:19'
    compile 'com.android.support:appcompat-v7:22.2.1'
//    compile 'com.google.android.gms:play-services:7.8.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile project(':AndroidNetworkManager')
    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }
}
